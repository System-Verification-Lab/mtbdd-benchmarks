OPENQASM 2.0;
include "qelib1.inc";
qreg q[5];
qreg psi[1];
qreg node[5];
qreg eval[4];
qreg anc[4];
creg meas[5];
creg c[5];
h q[1];
u2(0,0) q[0];
u2(0,0) q[1];
h q[2];
u2(0,0) q[3];
h q[4];
h q[4];
h q[0];
h q[0];
h q[1];
h q[2];
h q[3];
h q[4];
u2(-pi,-pi) q[1];
u2(-pi,-pi) q[3];
h q[4];
h q[4];
h q[2];
h q[3];
h q[4];
h q[2];
h q[3];
u2(-pi,-pi) q[1];
h q[4];
u2(-pi,-pi) q[1];
cp(-pi/2) q[2],q[1];
h q[2];
h q[0];
h q[1];
u2(-pi,-pi) q[3];
u2(-pi,-pi) q[3];
h q[0];
h q[1];
cp(-pi/4) q[2],q[0];
cp(-pi/2) q[2],q[1];
h q[2];
h q[3];
h q[4];
u2(-pi,-pi) q[3];
h q[4];
h q[2];
u2(0,0) q[3];
h q[4];
h q[2];
u2(0,0) q[3];
h q[4];
h q[0];
h q[0];
h q[1];
h q[2];
cp(-pi/4) q[2],q[0];
cp(-pi/2) q[2],q[1];
h q[2];
u2(-pi,-pi) q[3];
h q[4];
h q[4];
u2(-pi,-pi) q[0];
u2(-pi,-pi) q[0];
h q[2];
h q[3];
h q[4];
u2(-pi,-pi) q[0];
u2(-pi,-pi) q[1];
u2(-pi,-pi) q[1];
u2(-pi,-pi) q[1];
u2(-pi,-pi) q[0];
u2(-pi,-pi) q[3];
u2(0,0) q[0];
h q[0];
h q[1];
h q[2];
u2(0,0) q[3];
h q[0];
h q[1];
u2(-pi,-pi) q[0];
h q[2];
h q[3];
h q[2];
u2(-pi,-pi) q[3];
h q[4];
h q[4];
x psi[0];
x psi[0];
h q[2];
cp(pi/2) q[2],q[1];
h q[1];
u2(-pi,-pi) q[3];
h q[4];
h q[2];
h q[3];
cp(-pi/4) q[2],q[0];
cp(-pi/2) q[2],q[1];
h q[2];
h q[3];
h q[4];
h q[4];
h q[2];
u2(-pi,-pi) q[3];
h q[0];
h q[1];
cx q[4],q[1];
h q[2];
cp(-pi/4) q[2],q[0];
cp(-pi/2) q[2],q[1];
h q[2];
u2(0,0) q[3];
u2(-pi,-pi) q[0];
u2(-pi,-pi) q[1];
h q[2];
cp(pi/2) q[2],q[1];
h q[1];
cp(-pi/4) q[2],q[0];
cp(-pi/2) q[2],q[1];
h q[2];
h q[4];
h q[2];
h q[2];
cp(-pi/2) q[4],q[3];
h q[4];
h q[2];
cp(-pi/4) q[2],q[0];
cp(-pi/2) q[2],q[1];
h q[2];
cp(-pi/4) q[2],q[0];
cp(-pi/2) q[2],q[1];
h q[2];
h q[3];
h q[4];
h q[2];
cp(-pi/2) q[1],q[0];
h q[1];
cp(-pi/4) q[2],q[0];
cp(-pi/2) q[2],q[1];
h q[2];
u2(-pi,-pi) q[3];
h q[4];
h q[4];
h q[2];
u2(0,0) q[3];
h q[4];
h q[4];
h q[0];
h q[1];
h q[2];
u2(0,0) q[3];
u2(-pi,-pi) q[3];
h q[4];
h q[2];
h q[3];
u2(-pi,-pi) q[3];
h q[0];
h q[1];
h q[2];
u2(0,0) q[3];
h q[4];
h q[4];
x psi[0];
u2(-pi,-pi) q[3];
h q[2];
h q[3];
u2(-pi,-pi) q[3];
u2(-pi,-pi) q[3];
h q[2];
h q[3];
u2(-pi,-pi) q[0];
h q[2];
h q[4];
u2(-pi,-pi) q[0];
h q[4];
x psi[0];
u2(-pi,-pi) q[0];
u2(-pi,-pi) q[1];
x psi[0];
u2(-pi,-pi) q[3];
h q[2];
u2(0,0) q[3];
h q[4];
h q[2];
h q[0];
h q[1];
h q[1];
h q[4];
h q[4];
h q[2];
cp(pi/2) q[2],q[1];
h q[1];
u2(-pi,-pi) q[3];
u2(-pi,-pi) q[3];
h q[4];
h q[4];
h q[4];
h q[4];
h q[4];
u2(-pi,-pi) q[0];
h q[2];
h q[3];
h q[2];
cp(-pi/2) q[4],q[3];
h q[4];
h q[1];
h q[1];
h q[2];
h q[0];
h q[1];
cp(-pi/4) q[2],q[0];
cp(-pi/2) q[2],q[1];
h q[2];
u2(0,0) q[3];
h q[4];
h q[2];
h q[2];
x psi[0];
x psi[0];
x psi[0];
h q[1];
h q[2];
h q[0];
h q[4];
h q[0];
h q[1];
u2(-pi,-pi) q[0];
cz q[2],q[1];
u2(-pi,-pi) q[3];
u2(-pi,-pi) q[3];
x node[4];
h q[2];
cp(-pi/4) q[2],q[0];
cp(-pi/2) q[2],q[1];
h q[2];
x psi[0];
u2(0,0) q[0];
h q[4];
h q[2];
h q[3];
h q[2];
u2(0,0) q[3];
h q[4];
h q[4];
h q[4];
u2(-pi,-pi) q[0];
u2(-pi,-pi) q[1];
u2(-pi,-pi) q[1];
h q[4];
h q[4];
h q[4];
u2(-pi,-pi) q[0];
u2(-pi,-pi) q[1];
cx q[0],q[1];
u2(-pi,-pi) q[3];
h q[2];
h q[2];
h q[3];
h q[2];
h q[3];
h q[4];
u2(-pi,-pi) q[3];
h q[2];
u2(-pi,-pi) q[0];
cp(pi/2) q[1],q[0];
h q[0];
cp(-pi/2) q[3],q[2];
h q[3];
h q[2];
u2(-pi,-pi) q[3];
h q[0];
cp(-pi/2) q[2],q[1];
h q[2];
h q[2];
u2(0,0) q[3];
h q[4];
h q[2];
u2(0,0) q[3];
h q[2];
h q[3];
h q[4];
h q[2];
cp(pi/2) q[1],q[0];
h q[0];
cp(-pi/2) eval[1],eval[2];
cp(-pi/4) eval[0],eval[2];
h q[2];
h q[3];
h q[4];
x psi[0];
h q[2];
cp(pi/2) q[2],q[1];
h q[1];
h q[4];
rccx node[4],anc[2],anc[3];
h q[4];
u2(-pi,-pi) q[3];
u2(-pi,-pi) q[3];
h q[4];
h q[4];
cp(-pi/2) eval[1],eval[2];
cp(-pi/4) eval[0],eval[2];
h eval[1];
cp(-pi/2) eval[0],eval[1];
h eval[0];
h q[0];
u2(-pi,-pi) q[3];
h q[1];
u2(-pi,-pi) q[0];
h q[2];
h q[2];
cp(-pi/4) q[2],q[0];
cp(-pi/2) q[2],q[1];
h q[2];
h q[0];
h q[1];
h q[4];
h q[4];
h q[0];
x psi[0];
cp(-pi/4) eval[1],eval[3];
h q[4];
u2(-pi,-pi) q[3];
h q[2];
h q[2];
cp(pi/2) q[2],q[1];
h q[1];
h q[2];
h q[2];
u2(0,0) q[3];
h q[4];
h q[2];
h q[3];
u2(-pi,-pi) q[0];
u2(-pi,-pi) q[3];
h q[0];
h q[1];
u2(-pi,-pi) q[3];
h q[2];
h q[2];
cp(-pi/2) eval[0],eval[1];
